name: deploy
on:
  workflow_dispatch:
  workflow_run:
    workflows: [test]
    types: [completed]

jobs:
  dockerhub:
    name: Deploy to registry
    runs-on: arc-runner-set
    #runs-on: ubuntu-20.04
    environment: production
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    concurrency:
      group: production
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            default/budget-tracker:latest
            ${{ vars.DOCKER_REGISTRY_URL }}/default/budget-tracker:latest
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
          buildkitd-config-inline: |
            [registry."${{ vars.DOCKER_REGISTRY_URL }}"]
              insecure = true
              http = true
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/dev/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ vars.DOCKER_REGISTRY_URL }}/default/budget-tracker:latest
          cache-to: type=inline
#      - uses: ravsamhq/notify-slack-action@v2
#        if: always()
#        with:
#          status: ${{ job.status }}
#          notification_title: "Workflow {workflow} {status_message}"
#          footer: ""
#          notify_when: "failure"
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#  flyio:
#    name: Deploy to Fly.io
#    runs-on: ubuntu-20.04
#    environment: production
#    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
#    concurrency:
#      group: production
#      cancel-in-progress: true
#    env:
#      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
#    steps:
#      - uses: actions/checkout@v3
#      - uses: superfly/flyctl-actions/setup-flyctl@master
#      - run: flyctl deploy
#      - name: Create Sentry release
#        uses: getsentry/action-release@v1
#        env:
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
#          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
#        with:
#          environment: production
#      - uses: ravsamhq/notify-slack-action@v2
#        if: always()
#        with:
#          status: ${{ job.status }}
#          notification_title: "Workflow {workflow} {status_message}"
#          footer: ""
#          notify_when: "failure"
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

